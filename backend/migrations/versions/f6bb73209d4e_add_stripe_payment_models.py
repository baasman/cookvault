"""Add Stripe payment models

Revision ID: f6bb73209d4e
Revises: 878698479833
Create Date: 2025-08-16 14:58:10.235814

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f6bb73209d4e'
down_revision = '878698479833'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('stripe_subscription_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=255), nullable=True),
    sa.Column('tier', sa.Enum('FREE', 'PREMIUM', name='subscriptiontier'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'CANCELED', 'PAST_DUE', 'INCOMPLETE', 'INCOMPLETE_EXPIRED', 'TRIALING', 'UNPAID', name='subscriptionstatus'), nullable=False),
    sa.Column('current_period_start', sa.DateTime(), nullable=True),
    sa.Column('current_period_end', sa.DateTime(), nullable=True),
    sa.Column('cancel_at_period_end', sa.Boolean(), nullable=False),
    sa.Column('canceled_at', sa.DateTime(), nullable=True),
    sa.Column('monthly_upload_count', sa.Integer(), nullable=False),
    sa.Column('upload_count_reset_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_subscription_id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subscription_id', sa.Integer(), nullable=True),
    sa.Column('cookbook_id', sa.Integer(), nullable=True),
    sa.Column('stripe_payment_intent_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_invoice_id', sa.String(length=255), nullable=True),
    sa.Column('payment_type', sa.Enum('SUBSCRIPTION', 'COOKBOOK', name='paymenttype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'SUCCEEDED', 'FAILED', 'CANCELED', 'REFUNDED', name='paymentstatus'), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('failure_reason', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['cookbook_id'], ['cookbook.id'], ),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_payment_intent_id')
    )
    op.create_table('cookbook_purchases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('cookbook_id', sa.Integer(), nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('purchase_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('access_granted', sa.Boolean(), nullable=False),
    sa.Column('purchase_date', sa.DateTime(), nullable=False),
    sa.Column('access_revoked_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cookbook_id'], ['cookbook.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'cookbook_id', name='unique_user_cookbook_purchase')
    )
    with op.batch_alter_table('cookbook', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_purchasable', sa.Boolean(), nullable=False, server_default='0'))
        batch_op.add_column(sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=True))
        batch_op.add_column(sa.Column('purchase_count', sa.Integer(), nullable=False, server_default='0'))

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('stripe_customer_id', sa.String(length=255), nullable=True))
        batch_op.create_unique_constraint('uq_user_stripe_customer_id', ['stripe_customer_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint('uq_user_stripe_customer_id', type_='unique')
        batch_op.drop_column('stripe_customer_id')

    with op.batch_alter_table('cookbook', schema=None) as batch_op:
        batch_op.drop_column('purchase_count')
        batch_op.drop_column('price')
        batch_op.drop_column('is_purchasable')

    op.drop_table('cookbook_purchases')
    op.drop_table('payments')
    op.drop_table('subscriptions')
    # ### end Alembic commands ###
